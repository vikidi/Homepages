{"version":3,"sources":["components/3d/FallingText.js","views/FunStuffView/FunStuffView.js"],"names":["FallingText","children","vAlign","hAlign","color","props","useState","fallen","setFallen","font","useLoader","THREE","config","useMemo","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","group","useRef","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","ref","onPointerOver","gsap","defaults","duration","ease","yoyo","to","current","rotation","Math","PI","args","attach","metalness","roughness","Plane","usePlane","Cube","useBox","mass","api","over","setOver","useFrame","velocity","set","onPointerOut","FunStuffView","colorManagement","camera","fov","aspect","window","innerWidth","innerHeight","close","far","intensity","fallback","OrbitControls"],"mappings":"kOAoFeA,EA/EK,SAAC,GAMd,IALLC,EAKI,EALJA,SAKI,IAJJC,cAII,MAJK,SAIL,MAHJC,cAGI,MAHK,SAGL,EAFJC,EAEI,EAFJA,MACGC,EACC,wDAEwBC,oBAAS,GAFjC,mBAEGC,EAFH,KAEWC,EAFX,KAKEC,EAAOC,YAAUC,aAAkB,oBAGnCC,EAASC,mBACb,iBAAO,CACLJ,OACAK,KAAM,EACNC,OAAQ,GACRC,cAAe,GACfC,cAAc,EACdC,eAAgB,GAChBC,UAAW,IACXC,YAAa,EACbC,cAAe,KAEjB,CAACZ,IAGGa,EAAQC,mBAERC,EAAOC,aACX,SAACC,GACC,IAAMZ,EAAO,IAAIH,UACjBe,EAAKC,SAASC,qBACdF,EAAKC,SAASE,YAAYC,QAAQhB,GAClCY,EAAKK,SAASC,GACD,WAAX7B,GAAuBW,EAAKkB,EAAI,EAAe,UAAX7B,EAAqB,GAAKW,EAAKkB,EACrEN,EAAKK,SAASE,GACD,WAAX/B,GAAuBY,EAAKmB,EAAI,EAAe,QAAX/B,EAAmB,GAAKY,EAAKmB,IAErE,CAAChC,IAmBH,OACE,mCACE,iDAAWI,GAAX,IAAkB6B,IAAKZ,EAAvB,SACE,uBACEY,IAAKV,EACLW,cAAgB5B,EAAwB,KAAf,kBApB/B6B,IAAKC,SAAS,CACZC,SAAU,IACVC,KAAM,eACNC,MAAM,IAERJ,IAAKK,GAAGjB,EAAKkB,QAAQC,SAAU,CAC7BX,GAAc,GAAXY,KAAKC,KAEVT,IAAKK,GAAGjB,EAAKkB,QAAQX,SAAU,CAC7BE,GAAI,WAGNzB,GAAU,IAMN,UAGE,oCAAoBsC,KAAM,CAAC7C,EAAUW,KACrC,sCACEmC,OAAO,WACPC,UAAW,GACXC,UAAW,GACX7C,MAAOA,aCpEnB,SAAS8C,EAAM7C,GAAQ,IAAD,EACN8C,aAAS,+BAASR,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,IAAOxC,MAA5D6B,EADa,oBAEpB,OACE,sBAAMA,IAAKA,EAAX,SACE,qCAAqBa,OAAO,WAAWD,KAAM,CAAC,IAAK,SAKzD,SAASM,EAAK/C,GAAQ,IAAD,EACAgD,aAAO,+BAASC,KAAM,EAAGvB,SAAU,CAAC,EAAG,EAAG,IAAO1B,MADjD,mBACZ6B,EADY,KACPqB,EADO,OAEKjD,oBAAS,GAFd,mBAEZkD,EAFY,KAENC,EAFM,KAQnB,OAJAC,aAAS,WACHF,GAAMD,EAAII,SAASC,IAAI,EAAG,EAAG,MAIjC,uBAAM1B,IAAKA,EACTC,cAAe,kBAAMsB,GAAQ,IAC7BI,aAAc,kBAAMJ,GAAQ,IAF9B,UAIE,sCAAsBrD,MAAO,WAC7B,mCAAmB2C,OAAO,gBAiDjBe,UA5CM,WACnB,OACE,eAAC,IAAD,CACEC,iBAAe,EACfC,OAAQ,CACNC,IAAK,GACLC,OAAQC,OAAOC,WAAaD,OAAOE,YACnCC,MAAO,EACPC,IAAK,KANT,UAQE,iCACA,kCACExC,SAAU,CAAC,EAAG,GAAI,GAClByC,UAAW,EACXpE,MAAM,YAER,eAAC,WAAD,CAAUqE,SAAU,KAApB,UACE,eAAC,IAAD,WACE,cAACvB,EAAD,IACA,cAACE,EAAD,OAEF,cAAC,EAAD,CAAahD,MAAM,UAAU2B,SAAU,CAAC,EAAG,IAAM,GAAjD,SACG,YAGL,cAAC2C,EAAA,EAAD","file":"static/js/11.bbd79dc6.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef, useState, useMemo } from 'react'\nimport { useLoader, useUpdate } from 'react-three-fiber'\nimport gsap from 'gsap'\n\nconst FallingText = ({\n  children,\n  vAlign = 'center',\n  hAlign = 'center',\n  color,\n  ...props\n}) => {\n\n  const [fallen, setFallen] = useState(false)\n\n  // Load the font\n  const font = useLoader(THREE.FontLoader, '/fonts/bold.blob')\n\n  // Save text styles\n  const config = useMemo(\n    () => ({\n      font,\n      size: 1,\n      height: 0.2,\n      curveSegments: 30,\n      bevelEnabled: true,\n      bevelThickness: 0.2,\n      bevelSize: 0.07,\n      bevelOffset: 0,\n      bevelSegments: 3\n    }),\n    [font]\n  )\n\n  const group = useRef()\n\n  const mesh = useUpdate(\n    (self) => {\n      const size = new THREE.Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(size)\n      self.position.x +=\n        hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n      self.position.y +=\n        vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n    },\n    [children]\n  )\n\n  const fall = () => {\n    gsap.defaults({\n      duration: 1.8,\n      ease: 'power3.inOut',\n      yoyo: true,\n    })\n    gsap.to(mesh.current.rotation, {\n      x: Math.PI * -0.5,\n    })\n    gsap.to(mesh.current.position, {\n      y: -0.45,\n    })\n\n    setFallen(true)\n  }\n\n  return (\n    <>\n      <group {...props} ref={group}>\n        <mesh\n          ref={mesh}\n          onPointerOver={!fallen ? () => fall() : null}>\n          <textBufferGeometry args={[children, config]} />\n          <meshStandardMaterial\n            attach=\"material\"\n            metalness={0.2}\n            roughness={0.3}\n            color={color}\n          />\n        </mesh>\n      </group>\n    </>\n  )\n}\n\nexport default FallingText","import React, { Suspense, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport { Physics, useBox, usePlane } from '@react-three/cannon'\n\n// Components\nimport FallingText from '../../components/3d/FallingText'\n\nfunction Plane(props) {\n  const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n  return (\n    <mesh ref={ref}>\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n    </mesh>\n  )\n}\n\nfunction Cube(props) {\n  const [ref, api] = useBox(() => ({ mass: 1, position: [5, 5, 0], ...props }))\n  const [over, setOver] = useState(false)\n\n  useFrame(() => {\n    if (over) api.velocity.set(0, 1, 0)\n  })\n\n  return (\n    <mesh ref={ref}\n      onPointerOver={() => setOver(true)}\n      onPointerOut={() => setOver(false)}\n    >\n      <meshPhysicalMaterial color={'orange'} />\n      <boxBufferGeometry attach=\"geometry\" />\n    </mesh>\n  )\n}\n\nconst FunStuffView = () => {\n  return (\n    <Canvas\n      colorManagement\n      camera={{\n        fov: 75,\n        aspect: window.innerWidth / window.innerHeight,\n        close: 1,\n        far: 1000\n      }}>\n      <ambientLight />\n      <directionalLight\n        position={[0, 20, 7]}\n        intensity={1.0}\n        color=\"#ffffff\"\n      />\n      <Suspense fallback={null}>\n        <Physics>\n          <Plane />\n          <Cube />\n        </Physics>\n        <FallingText color=\"#636363\" position={[0, 0.65, 0]}>\n          {'CODE'}\n        </FallingText>\n      </Suspense>\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\n/*\nposition: [-30, 20, 50]\n\n<directionalLight\n        position={[0, 20, 7]}\n        intensity={1.0}\n        color=\"#ffffff\"\n      />\n\n        <FallingText color=\"#636363\">\n          {'CODE'}\n        </FallingText>\n*/\n\nexport default FunStuffView"],"sourceRoot":""}