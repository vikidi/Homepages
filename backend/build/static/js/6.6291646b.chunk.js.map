{"version":3,"sources":["components/GridContainer/GridContainer.js","components/NavigationLink/NavigationLink.js","components/DrawerNavigation/DrawerNavigation.js","components/ThemeSelectorIcon/ThemeSelectorIcon.js","components/OpenNavigation/OpenNavigation.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/ViewWrapper/ViewWrapper.js","components/BackgroundPaper/BackgroundPaper.module.css","components/BackgroundPaper/BackgroundPaper.js","components/Selector/Selector.js","views/SettingsView/SettingsView.js"],"names":["useStyles","makeStyles","root","flexGrow","height","grid","GridContainer","direction","horizontal","vertical","children","classes","className","container","justify","alignItems","defaultProps","theme","link","paddingLeft","spacing","paddingRight","NavigationLink","keyProp","to","icon","text","ListItem","button","component","Link","ListItemIcon","ListItemText","primary","list","width","menu","marginRight","marginLeft","DrawerNavigation","t","useTranslation","useState","open","setOpen","toggleDrawer","event","type","key","Grid","item","Typography","title","variant","noWrap","grow","IconButton","aria-label","color","onClick","edge","fontSize","SwipeableDrawer","anchor","onClose","onOpen","role","onKeyDown","List","Divider","ThemeSelectorIcon","d","useDispatch","useTheme","anchorEl","setAnchorEl","Boolean","handleClose","Tooltip","aria-haspopup","currentTarget","anchorOrigin","keepMounted","transformOrigin","availableThemes","map","curTheme","MenuItem","selected","palette","name","setTheme","window","location","pathname","reload","alignSelf","textTransform","margin","CustomLink","React","forwardRef","props","ref","navigate","rest","Button","displayName","OpenNavigation","Navigation","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","AppBar","position","Toolbar","Copyright","Date","getFullYear","footer","padding","marginTop","backgroundColor","main","textAlign","Footer","Container","maxWidth","marginBottom","ViewWrapper","header","fullMain","module","exports","borderRadius","BackgroundPaper","center","Paper","elevation","styles","Selector","label","value","handleChange","menuItems","FormControl","InputLabel","Select","onChange","Autosave","htmlColor","success","SettingsView","i18n","useSelector","store","language","xs","gutterBottom","display","target","langObj","getByName","changeLanguage","setLanguage","languages","lang","short"],"mappings":"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","file":"static/js/6.6291646b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst useStyles = makeStyles((/*theme*/) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  }\r\n}))\r\n\r\nconst GridContainer = ({ direction, horizontal, vertical, children }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction={direction}\r\n        justify={horizontal}\r\n        alignItems={vertical}\r\n        className={classes.grid}\r\n      >\r\n\r\n        {children}\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nGridContainer.propTypes = {\r\n\r\n  /** Components inside */\r\n  children: PropTypes.node,\r\n\r\n  /** Direction of the grids inside */\r\n  direction: PropTypes.oneOf(['row', 'column']),\r\n\r\n  /** Horizontal alignment of the grids inside */\r\n  horizontal: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\r\n\r\n  /** Vertical alignment of the grids inside */\r\n  vertical: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch'])\r\n}\r\n\r\nGridContainer.defaultProps = {\r\n  direction: 'row',\r\n  horizontal: 'center',\r\n  vertical: 'center'\r\n}\r\n\r\nexport default GridContainer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  link: {\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(6)\r\n  }\r\n}))\r\n\r\nconst NavigationLink = ({ keyProp, to, icon, text }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ListItem button key={keyProp} component={Link} to={to} className={classes.link}>\r\n      <ListItemIcon>{icon}</ListItemIcon>\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nNavigationLink.propTypes = {\r\n  /** Key for the current element */\r\n  keyProp: PropTypes.any.isRequired,\r\n\r\n  /** Path to link */\r\n  to: PropTypes.string.isRequired,\r\n\r\n  /** Icon to display */\r\n  icon: PropTypes.node,\r\n\r\n  /** String to display */\r\n  text: PropTypes.string\r\n}\r\n\r\nexport default NavigationLink","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// Icons\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\n\r\n// My components\r\nimport NavigationLink from '../NavigationLink/NavigationLink'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 'auto'\r\n  },\r\n  menu: {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst DrawerNavigation = () => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return\r\n    }\r\n\r\n    setOpen(open)\r\n  }\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        <NavigationLink keyProp='home' to='/' icon={<HomeIcon />} text={t('NavigationLinks.home')} />\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <NavigationLink keyProp='settings' to='/settings' icon={<SettingsIcon />} text={t('NavigationLinks.settings')} />\r\n      </List>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.menu}\r\n      >\r\n        <Grid item>\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            Ville Saarinen\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <div className={classes.grow} />\r\n\r\n        <Grid item>\r\n          <IconButton className={classes.menu} aria-label=\"navigation\" color=\"primary\" onClick={toggleDrawer(true)} edge='end'>\r\n            <MenuIcon fontSize='large' />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n        <SwipeableDrawer\r\n          anchor={'right'}\r\n          open={open}\r\n          onClose={toggleDrawer(false)}\r\n          onOpen={toggleDrawer(true)}\r\n        >\r\n          {list()}\r\n        </SwipeableDrawer>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DrawerNavigation","import React, { useState } from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Brightness4 from '@material-ui/icons/Brightness4'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\n\r\nimport { setTheme } from '../../reducers/themeReducer'\r\nimport { availableThemes } from '../../utils/themeService'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing(6),\r\n    paddingLeft: theme.spacing(6)\r\n  },\r\n}))\r\n\r\nconst ThemeSelectorIcon = () => {\r\n  const classes = useStyles()\r\n  const d = useDispatch()\r\n  const { t } = useTranslation()\r\n  const theme = useTheme()\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const open = Boolean(anchorEl)\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const handleThemeChange = name => {\r\n    d(setTheme({ name }))\r\n    handleClose()\r\n\r\n    // Reload page if in main view, the code block does not update otherwise\r\n    if (window.location.pathname === '/') {\r\n      window.location.reload(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Change theme\">\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          onClick={handleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <Brightness4 />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {availableThemes.map(curTheme => {\r\n          return (\r\n            <MenuItem\r\n              key={curTheme.name}\r\n              selected={theme.palette.type === curTheme.name}\r\n              className={classes.root}\r\n              onClick={() => handleThemeChange(curTheme.name)}\r\n            >\r\n              {t(`ThemeSelection.ThemeNames.${curTheme.name}`)}\r\n            </MenuItem>\r\n          )})\r\n        }\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ThemeSelectorIcon","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport ThemeSelectorIcon from '../ThemeSelectorIcon/ThemeSelectorIcon'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    alignSelf: 'center'\r\n  },\r\n  link: {\r\n    textTransform: 'capitalize',\r\n    margin: theme.spacing(1)\r\n  }\r\n}))\r\n\r\n\r\nconst CustomLink = React.forwardRef((props, ref) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { navigate, ...rest } = props\r\n  const classes = useStyles()\r\n\r\n  return (<Button className={classes.link} ref={ref} {...rest}>{props.children}</Button>)\r\n})\r\n\r\nCustomLink.displayName = 'CustomLink'\r\n\r\nconst OpenNavigation = () => {\r\n  const classes = useStyles()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        className={classes.menu}\r\n      >\r\n        <Grid item>\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            Ville Saarinen\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <div className={classes.grow} />\r\n\r\n        <Grid item>\r\n          <Link to='/' component={CustomLink}>{t('NavigationLinks.home')}</Link>\r\n          <Link to='/settings' component={CustomLink}>{t('NavigationLinks.settings')}</Link>\r\n          <ThemeSelectorIcon />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OpenNavigation","import React, { useState, useEffect } from 'react'\r\n\r\n// Material UI components\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\n\r\n// Own Components\r\nimport DrawerNavigation from '../DrawerNavigation/DrawerNavigation'\r\nimport OpenNavigation from '../OpenNavigation/OpenNavigation'\r\n\r\nconst Navigation = () => {\r\n  const breakpoint = 620\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // Update window's width each time changed\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth))\r\n  }, [])\r\n\r\n  return (\r\n    <AppBar position='static' color='transparent'>\r\n      <Toolbar>\r\n\r\n        {windowWidth > breakpoint ? <OpenNavigation /> : <DrawerNavigation />}\r\n\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © Ville Saarinen '}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor: theme.palette.footer.main,\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container maxWidth=\"md\">\r\n        <Copyright />\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\n// Material UI Components\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// Own Components\r\nimport Navigation from '../Navigation/Navigation'\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto'\r\n  },\r\n}))\r\n\r\nconst ViewWrapper = ({ header, footer, fullMain, children }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      {header && <Navigation />}\r\n      <Container className={fullMain ? classes.root : null} component='main'>\r\n        {children}\r\n      </Container>\r\n      {footer && <Footer />}\r\n    </>\r\n  )\r\n}\r\n\r\nViewWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n  header: PropTypes.bool,\r\n  footer: PropTypes.bool,\r\n  fullMain: PropTypes.bool\r\n}\r\n\r\nViewWrapper.defaultProps = {\r\n  header: true,\r\n  footer: true,\r\n  fullMain: false\r\n}\r\n\r\nexport default ViewWrapper","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"BackgroundPaper_center__6mJL3\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport styles from './BackgroundPaper.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    margin: theme.spacing(6),\r\n  },\r\n}))\r\n\r\nconst BackgroundPaper = ({ center, children }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper\r\n      classes={{\r\n        root: classes.root\r\n      }}\r\n      elevation={2}\r\n      className={center ? styles.center : null}\r\n    >\r\n\r\n      {children}\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nBackgroundPaper.propTypes = {\r\n\r\n  /** Components inside */\r\n  children: PropTypes.node,\r\n\r\n  /** Centering of items */\r\n  center: PropTypes.bool\r\n}\r\n\r\nBackgroundPaper.defaultProps = {\r\n  center: true\r\n}\r\n\r\nexport default BackgroundPaper","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(4),\r\n    textAlign: 'left'\r\n  },\r\n}))\r\n\r\nconst Selector = ({ label, value, handleChange, menuItems }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <FormControl className={classes.root}>\r\n      <InputLabel>{label}</InputLabel>\r\n      <Select\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        {menuItems}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nSelector.propTypes = {\r\n  /** Label for the selectable */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Current value */\r\n  value: PropTypes.any.isRequired,\r\n\r\n  /** Change handler, gets 'event' as parameter */\r\n  handleChange: PropTypes.func.isRequired,\r\n\r\n  /** Array of <MenuItem/> components */\r\n  menuItems: PropTypes.array\r\n}\r\n\r\nexport default Selector","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\n\r\n// Material UI Components\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// Material UI Icons\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\n\r\n// Custom Components\r\nimport GridContainer from '../../components/GridContainer/GridContainer'\r\nimport BackgroundPaper from '../../components/BackgroundPaper/BackgroundPaper'\r\nimport Selector from '../../components/Selector/Selector'\r\nimport ViewWrapper from '../../components/ViewWrapper/ViewWrapper'\r\n\r\n// Reducers\r\nimport { setTheme } from '../../reducers/themeReducer'\r\nimport { setLanguage } from '../../reducers/languageReducer'\r\n\r\n// Services\r\nimport { availableThemes } from '../../utils/themeService'\r\nimport { languages, getByName } from '../../utils/languageService'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}))\r\n\r\nconst Autosave = () => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <GridContainer vertical='center' horizontal='flex-end'>\r\n      <CheckCircleOutlineIcon className={classes.root} htmlColor={theme.palette.success.main} />\r\n      {t('SettingsView.Autosave.label')}\r\n    </GridContainer>\r\n  )\r\n}\r\n\r\nconst SettingsView = () => {\r\n  const { t, i18n } = useTranslation()\r\n  const d = useDispatch()\r\n\r\n  const theme = useSelector(store => store.theme)\r\n  const language = useSelector(store => store.language)\r\n\r\n  const handleThemeChange = event => {\r\n    d(setTheme({ name: event.target.value }))\r\n  }\r\n\r\n  const handleLanguageChange = event => {\r\n    const langObj = getByName(event.target.value)\r\n    i18n.changeLanguage(langObj['short'])\r\n    d(setLanguage(langObj))\r\n  }\r\n\r\n  return (\r\n    <ViewWrapper>\r\n      <GridContainer>\r\n        <Grid item xs={9}>\r\n          <BackgroundPaper>\r\n            <GridContainer direction='column' vertical='stretch'>\r\n\r\n              <Typography variant=\"h2\" gutterBottom>{t('SettingsView.title')}</Typography>\r\n              <Container maxWidth='sm'>\r\n                <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>{t('SettingsView.description')}</Typography>\r\n              </Container>\r\n\r\n              <Selector\r\n                label={t('ThemeSelection.label')}\r\n                value={theme.name}\r\n                handleChange={handleThemeChange}\r\n                menuItems={availableThemes.map(curTheme => <MenuItem key={curTheme.name} value={curTheme.name}>{t(`ThemeSelection.ThemeNames.${curTheme.name}`)}</MenuItem>)}\r\n              />\r\n              <Divider />\r\n              <Selector\r\n                label={t('LanguageSelection.label')}\r\n                value={language.name}\r\n                handleChange={handleLanguageChange}\r\n                menuItems={languages.map(lang => <MenuItem key={lang.short} value={lang.name}>{lang.name}</MenuItem>)}\r\n              />\r\n              <Autosave />\r\n            </GridContainer>\r\n          </BackgroundPaper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </ViewWrapper>\r\n  )\r\n}\r\n\r\nexport default SettingsView"],"sourceRoot":""}