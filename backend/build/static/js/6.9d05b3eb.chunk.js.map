{"version":3,"sources":["components/NavigationLink/NavigationLink.js","components/DrawerNavigation/DrawerNavigation.js","components/ThemeSelectorIcon/ThemeSelectorIcon.js","components/OpenNavigation/OpenNavigation.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/ViewWrapper/ViewWrapper.js","components/BackgroundPaper/BackgroundPaper.module.css","components/BackgroundPaper/BackgroundPaper.js","components/Selector/Selector.js","views/SettingsView/SettingsView.js"],"names":["useStyles","makeStyles","theme","link","paddingLeft","spacing","paddingRight","NavigationLink","keyProp","to","icon","text","classes","ListItem","button","component","Link","className","ListItemIcon","ListItemText","primary","list","width","menu","marginRight","marginLeft","DrawerNavigation","t","useTranslation","useState","open","setOpen","toggleDrawer","event","type","key","Grid","container","direction","justify","alignItems","item","Typography","title","variant","noWrap","grow","IconButton","aria-label","color","onClick","edge","fontSize","SwipeableDrawer","anchor","onClose","onOpen","role","onKeyDown","List","Divider","root","ThemeSelectorIcon","d","useDispatch","useTheme","anchorEl","setAnchorEl","Boolean","handleClose","Tooltip","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","availableThemes","map","curTheme","MenuItem","selected","name","setTheme","window","location","pathname","reload","handleThemeChange","alignSelf","textTransform","margin","CustomLink","React","forwardRef","props","ref","navigate","rest","Button","children","displayName","OpenNavigation","Navigation","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","AppBar","position","Toolbar","Copyright","Date","getFullYear","footer","padding","marginTop","backgroundColor","palette","main","textAlign","Footer","Container","maxWidth","marginBottom","height","ViewWrapper","header","fullMain","defaultProps","module","exports","borderRadius","BackgroundPaper","center","Paper","elevation","styles","Selector","label","value","handleChange","menuItems","FormControl","InputLabel","Select","onChange","Autosave","GridContainer","htmlColor","success","SettingsView","i18n","useSelector","store","language","md","gutterBottom","display","getThemeByName","target","langObj","getByName","changeLanguage","setLanguage","languages","lang","short"],"mappings":"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","file":"static/js/6.9d05b3eb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(6)\n  }\n}))\n\nconst NavigationLink = ({ keyProp, to, icon, text }) => {\n  const classes = useStyles()\n\n  return (\n    <ListItem button key={keyProp} component={Link} to={to} className={classes.link}>\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  )\n}\n\nNavigationLink.propTypes = {\n  /** Key for the current element */\n  keyProp: PropTypes.any.isRequired,\n\n  /** Path to link */\n  to: PropTypes.string.isRequired,\n\n  /** Icon to display */\n  icon: PropTypes.node,\n\n  /** String to display */\n  text: PropTypes.string\n}\n\nexport default NavigationLink","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTranslation } from 'react-i18next'\n\n// Material UI Components\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport Grid from '@material-ui/core/Grid'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\n// Icons\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HomeIcon from '@material-ui/icons/Home'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\n// My components\nimport NavigationLink from '../NavigationLink/NavigationLink'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 'auto'\n  },\n  menu: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  }\n}))\n\nconst DrawerNavigation = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  const [open, setOpen] = useState(false)\n\n  const toggleDrawer = open => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n\n    setOpen(open)\n  }\n\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        <NavigationLink keyProp='home' to='/' icon={<HomeIcon />} text={t('NavigationLinks.home')} />\n      </List>\n      <Divider />\n      <List>\n        <NavigationLink keyProp='settings' to='/settings' icon={<SettingsIcon />} text={t('NavigationLinks.settings')} />\n      </List>\n    </div>\n  )\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.menu}\n      >\n        <Grid item>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Ville Saarinen\n          </Typography>\n        </Grid>\n\n        <div className={classes.grow} />\n\n        <Grid item>\n          <IconButton className={classes.menu} aria-label=\"navigation\" color=\"primary\" onClick={toggleDrawer(true)} edge='end'>\n            <MenuIcon fontSize='large' />\n          </IconButton>\n        </Grid>\n\n        <SwipeableDrawer\n          anchor={'right'}\n          open={open}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n        >\n          {list()}\n        </SwipeableDrawer>\n      </Grid>\n    </>\n  )\n}\n\nexport default DrawerNavigation","import React, { useState } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/styles'\nimport { useDispatch } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Brightness4 from '@material-ui/icons/Brightness4'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\n\nimport { setTheme } from '../../reducers/themeReducer'\nimport { availableThemes } from '../../utils/themeUtil'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingRight: theme.spacing(6),\n    paddingLeft: theme.spacing(6)\n  },\n}))\n\nconst ThemeSelectorIcon = () => {\n  const classes = useStyles()\n  const d = useDispatch()\n  const { t } = useTranslation()\n  const theme = useTheme()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open = Boolean(anchorEl)\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleThemeChange = theme => {\n    d(setTheme(theme))\n    handleClose()\n\n    // Reload page if in main view, the code block does not update otherwise\n    if (window.location.pathname === '/') {\n      window.location.reload()\n    }\n  }\n\n  return (\n    <>\n      <Tooltip title={t('Components.ThemeSelIcon.tooltip')}>\n        <IconButton\n          aria-haspopup='true'\n          onClick={handleMenu}\n          color='inherit'\n        >\n          <Brightness4 />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        {availableThemes.map(curTheme => {\n          return (\n            <MenuItem\n              key={curTheme.name}\n              selected={theme.name === curTheme.name}\n              className={classes.root}\n              onClick={() => handleThemeChange(curTheme)}\n            >\n              {t(`ThemeSelection.ThemeNames.${curTheme.name}`)}\n            </MenuItem>\n          )})\n        }\n      </Menu>\n    </>\n  )\n}\n\nexport default ThemeSelectorIcon","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\n\nimport ThemeSelectorIcon from '../ThemeSelectorIcon/ThemeSelectorIcon'\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    alignSelf: 'center'\n  },\n  link: {\n    textTransform: 'capitalize',\n    margin: theme.spacing(1)\n  }\n}))\n\n\nconst CustomLink = React.forwardRef((props, ref) => {\n  // eslint-disable-next-line no-unused-vars\n  const { navigate, ...rest } = props\n  const classes = useStyles()\n\n  return (<Button className={classes.link} ref={ref} {...rest}>{props.children}</Button>)\n})\n\nCustomLink.displayName = 'CustomLink'\n\nconst OpenNavigation = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-around\"\n        alignItems=\"center\"\n        className={classes.menu}\n      >\n        <Grid item>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Ville Saarinen\n          </Typography>\n        </Grid>\n\n        <div className={classes.grow} />\n\n        <Grid item>\n          <Link to='/' component={CustomLink}>{t('NavigationLinks.home')}</Link>\n          <Link to='/settings' component={CustomLink}>{t('NavigationLinks.settings')}</Link>\n          <ThemeSelectorIcon />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default OpenNavigation","import React, { useState, useEffect } from 'react'\n\n// Material UI components\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\n\n// Own Components\nimport DrawerNavigation from '../DrawerNavigation/DrawerNavigation'\nimport OpenNavigation from '../OpenNavigation/OpenNavigation'\n\nconst Navigation = () => {\n  const breakpoint = 620\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // Update window's width each time changed\n  useEffect(() => {\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth))\n  }, [])\n\n  return (\n    <AppBar position='static' color='transparent'>\n      <Toolbar>\n\n        {windowWidth > breakpoint ? <OpenNavigation /> : <DrawerNavigation />}\n\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navigation","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright © Ville Saarinen '}\n      {new Date().getFullYear()}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor: theme.palette.footer.main,\n    textAlign: 'center'\n  }\n}))\n\nconst Footer = () => {\n  const classes = useStyles()\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"md\">\n        <Copyright />\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\n\n// Material UI Components\nimport Container from '@material-ui/core/Container'\n\n// Own Components\nimport Navigation from '../Navigation/Navigation'\nimport Footer from '../Footer/Footer'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    height: '100%'\n  },\n}))\n\nconst ViewWrapper = ({ header, footer, fullMain, children }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      {header && <Navigation />}\n      <Container className={fullMain ? classes.root : null} component='main'>\n        {children}\n      </Container>\n      {footer && <Footer />}\n    </>\n  )\n}\n\nViewWrapper.propTypes = {\n  children: PropTypes.node,\n  header: PropTypes.bool,\n  footer: PropTypes.bool,\n  fullMain: PropTypes.bool\n}\n\nViewWrapper.defaultProps = {\n  header: true,\n  footer: true,\n  fullMain: false\n}\n\nexport default ViewWrapper","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"BackgroundPaper_center__6mJL3\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport styles from './BackgroundPaper.module.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 5,\n    padding: theme.spacing(4),\n    margin: theme.spacing(6),\n  },\n}))\n\nconst BackgroundPaper = ({ center, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper\n      classes={{\n        root: classes.root\n      }}\n      elevation={2}\n      className={center ? styles.center : null}\n    >\n\n      {children}\n\n    </Paper>\n  )\n}\n\nBackgroundPaper.propTypes = {\n\n  /** Components inside */\n  children: PropTypes.node,\n\n  /** Centering of items */\n  center: PropTypes.bool\n}\n\nBackgroundPaper.defaultProps = {\n  center: true\n}\n\nexport default BackgroundPaper","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4),\n    textAlign: 'left'\n  },\n}))\n\nconst Selector = ({ label, value, handleChange, menuItems }) => {\n  const classes = useStyles()\n\n  return (\n    <FormControl className={classes.root}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={value}\n        onChange={handleChange}\n      >\n        {menuItems}\n      </Select>\n    </FormControl>\n  )\n}\n\nSelector.propTypes = {\n  /** Label for the selectable */\n  label: PropTypes.string.isRequired,\n\n  /** Current value */\n  value: PropTypes.any.isRequired,\n\n  /** Change handler, gets 'event' as parameter */\n  handleChange: PropTypes.func.isRequired,\n\n  /** Array of <MenuItem/> components */\n  menuItems: PropTypes.array\n}\n\nexport default Selector","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles, useTheme } from '@material-ui/styles'\n\n// Material UI Components\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\n\n// Material UI Icons\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\n\n// Custom Components\nimport GridContainer from '../../components/GridContainer/GridContainer'\nimport BackgroundPaper from '../../components/BackgroundPaper/BackgroundPaper'\nimport Selector from '../../components/Selector/Selector'\nimport ViewWrapper from '../../components/ViewWrapper/ViewWrapper'\n\n// Reducers\nimport { setTheme } from '../../reducers/themeReducer'\nimport { setLanguage } from '../../reducers/languageReducer'\n\n// Services\nimport { availableThemes, getThemeByName } from '../../utils/themeUtil'\nimport { languages, getByName } from '../../utils/languageUtil'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginRight: theme.spacing(1)\n  },\n}))\n\nconst Autosave = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { t } = useTranslation()\n\n  return (\n    <GridContainer vertical='center' horizontal='flex-end'>\n      <CheckCircleOutlineIcon className={classes.root} htmlColor={theme.palette.success.main} />\n      {t('SettingsView.Autosave.label')}\n    </GridContainer>\n  )\n}\n\nconst SettingsView = () => {\n  const { t, i18n } = useTranslation()\n  const d = useDispatch()\n\n  const theme = useSelector(store => store.theme)\n  const language = useSelector(store => store.language)\n\n  const handleThemeChange = event => {\n    d(setTheme(getThemeByName(event.target.value)))\n  }\n\n  const handleLanguageChange = event => {\n    const langObj = getByName(event.target.value)\n    i18n.changeLanguage(langObj['short'])\n    d(setLanguage(langObj))\n  }\n\n  return (\n    <ViewWrapper header footer fullMain>\n      <GridContainer>\n        <Grid item md={9}>\n          <BackgroundPaper>\n            <GridContainer direction='column' vertical='stretch'>\n\n              <Typography variant=\"h3\" gutterBottom>{t('SettingsView.title')}</Typography>\n              <Container maxWidth='sm'>\n                <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>{t('SettingsView.description')}</Typography>\n              </Container>\n\n              <Selector\n                label={t('ThemeSelection.label')}\n                value={theme.name}\n                handleChange={handleThemeChange}\n                menuItems={availableThemes.map(curTheme => <MenuItem key={curTheme.name} value={curTheme.name}>{t(`ThemeSelection.ThemeNames.${curTheme.name}`)}</MenuItem>)}\n              />\n              <Divider />\n              <Selector\n                label={t('LanguageSelection.label')}\n                value={language.name}\n                handleChange={handleLanguageChange}\n                menuItems={languages.map(lang => <MenuItem key={lang.short} value={lang.name}>{lang.name}</MenuItem>)}\n              />\n              <Autosave />\n            </GridContainer>\n          </BackgroundPaper>\n        </Grid>\n      </GridContainer>\n    </ViewWrapper>\n  )\n}\n\nexport default SettingsView"],"sourceRoot":""}