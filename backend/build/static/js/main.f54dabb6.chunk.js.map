{"version":3,"sources":["utils/localStorage.js","serviceWorkerRegistration.js","reportWebVitals.js","reducers/userReducer.js","views/ErrorView/ErrorView.js","components/ErrorBoundary/ErrorBoundary.js","App.js","i18n.js","reducers/notificationReducer.js","store.js","index.js","reducers/themeReducer.js","utils/themeUtil.js","reducers/languageReducer.js","utils/languageUtil.js","components/CustomLoader/CustomLoader.js","components/GridContainer/GridContainer.js","components/CustomLoader/CustomLoader.module.css"],"names":["setToLS","key","value","window","localStorage","setItem","JSON","stringify","getFromLS","getItem","parse","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userReducer","state","action","type","data","useStyles","makeStyles","theme","h1","whiteSpace","maxWidth","textAlign","marginBottom","fontSize","breakpoints","down","h3","marginTop","warningIcon","ErrorView","classes","t","useTranslation","GridContainer","horizontal","vertical","direction","className","Typography","variant","ErrorBoundary","props","hasError","this","children","React","Component","MainView","lazy","SettingsView","App","d","useDispatch","useSelector","store","provideMuiTheme","useEffect","dispatch","a","user","initLanguage","initTheme","ThemeProvider","CssBaseline","fallback","CustomLoader","path","component","startLang","i18n","use","Backend","initReactI18next","init","lng","short","defaultLanguage","fallbackLng","debug","backend","loadPath","allowMultiLoading","react","wait","useSuspense","notificationReducer","concat","filter","n","id","reducer","combineReducers","language","languageReducer","notification","themeReducer","createStore","composeWithDevTools","applyMiddleware","thunk","Index","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","selectedTheme","defaultTheme","setTheme","availableThemes","dark","light","getThemeByName","name","i","length","createMuiTheme","selectedLang","setLanguage","lang","languages","getByName","l","size","useTheme","styles","container","color","palette","primary","main","defaultProps","root","flexGrow","height","grid","justify","alignItems","module","exports"],"mappings":"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","file":"static/js/main.f54dabb6.chunk.js","sourcesContent":["export const setToLS = (key, value) => {\n  window.localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const getFromLS = key => {\n  const value = window.localStorage.getItem(key)\n\n  if (value) {\n    return JSON.parse(value)\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { setToLS, getFromLS } from '../utils/localStorage'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_USER':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n\n    // Get user from local storage\n    const user = getFromLS('loggedUser')\n    if (user) {\n\n      // Set to store if there is user\n      dispatch({\n        type: 'SET_USER',\n        data: user\n      })\n    }\n  }\n}\n\nexport const setUser = user => {\n  return async dispatch => {\n\n    // Set to local storage\n    setToLS('loggedUser', user)\n\n    // Set to store\n    dispatch({\n      type: 'SET_USER',\n      data: user\n    })\n  }\n}\n\nexport default userReducer","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles } from '@material-ui/styles'\n\n// Material UI Components\nimport Typography from '@material-ui/core/Typography'\n\n// Material UI Icons\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded'\n\n// Own Components\nimport GridContainer from '../../components/GridContainer/GridContainer'\n\nconst useStyles = makeStyles(theme => ({\n  h1: {\n    whiteSpace: 'normal !important',\n    maxWidth: '80vw !important',\n    textAlign: 'center',\n    marginBottom: 0,\n    fontSize: '2em',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1.3em'\n    }\n  },\n  h3: {\n    whiteSpace: 'normal !important',\n    maxWidth: '80vw !important',\n    textAlign: 'center',\n    marginTop: 0,\n    fontSize: '1.15em',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1em'\n    }\n  },\n  warningIcon: {\n    fontSize: '10vw',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '30vw'\n    }\n  }\n}))\n\nconst ErrorView = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <GridContainer horizontal='center' vertical='center' direction='column'>\n      <WarningRoundedIcon className={classes.warningIcon} />\n      <Typography variant='h1' className={classes.h1}>\n        {t('ErrorView.title')}\n      </Typography>\n      <Typography variant='h3' className={classes.h3}>\n        {t('ErrorView.text')}\n      </Typography>\n    </GridContainer>\n  )\n}\n\nexport default ErrorView","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport ErrorView from '../../views/ErrorView/ErrorView'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(/*error*/) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(/*error, errorInfo*/) {\n    // You can also log the error to an error reporting service\n    //logErrorToMyService(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (<ErrorView />)\n    }\n\n    return this.props.children\n  }\n}\n\nErrorBoundary.propTypes = {\n  /** Contained elements */\n  children: PropTypes.node.isRequired\n}\n\nexport default ErrorBoundary","import React, { Suspense, useEffect, lazy } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\n// Reducers\nimport { initUser } from './reducers/userReducer'\nimport { initLanguage } from './reducers/languageReducer'\nimport { initTheme } from './reducers/themeReducer'\n\n// Utils\nimport provideMuiTheme from './utils/themeUtil'\n\n// Components\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport CustomLoader from './components/CustomLoader/CustomLoader'\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\n\n// Views\nconst MainView = lazy(() => import('./views/MainView/MainView'))\nconst SettingsView = lazy(() => import('./views/SettingsView/SettingsView'))\n\nconst App = () => {\n  const d = useDispatch()\n\n  // Fetch theme\n  const theme = useSelector(store => provideMuiTheme(store.theme))\n\n  // Setup user, language and theme to redux store\n  useEffect(() => {\n\n    // User init\n    d(initUser())\n\n    // Language init\n    d(initLanguage())\n\n    // Theme init\n    d(initTheme())\n  }, [d])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ErrorBoundary>\n        <Suspense fallback={<CustomLoader />} >\n          <Switch>\n            <Route path='/settings' component={SettingsView} />\n            <Route path='/' component={MainView} />\n          </Switch>\n        </Suspense>\n      </ErrorBoundary>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport Backend from 'i18next-http-backend'\n\nimport { getFromLS } from './utils/localStorage'\nimport defaultLanguage from './utils/languageUtil'\n\n// Get the possibly stored language for the translator\nconst startLang = getFromLS('selectedLanguage')\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: startLang ? startLang.short : defaultLanguage.short,\n    fallbackLng: 'en',\n    debug: true, // TODO: Meaning?\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n      allowMultiLoading: false // TODO: Meaning?\n    },\n    react: {\n      wait: true, // TODO: Meaning?\n      useSuspense: true // TODO: Meaning?\n    }\n  })\n\n\nexport default i18n","import Check from '@material-ui/icons/Check'\nimport Warning from '@material-ui/icons/Warning'\n\nconst notificationReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return state.concat(action.data)\n  case 'REMOVE_NOTIFICATION':\n    return state.filter(n => n.id !== action.data)\n  default:\n    return state\n  }\n}\n\nfunction uuid() {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    ((c ^ crypto.getRandomValues(new Uint8Array(1))[0]) & (15 >> (c / 4))).toString(16)\n  )\n}\n\nconst DEFAULT_TIME = 10000\n\nexport const setInfo = (msg, timeout = DEFAULT_TIME) => {\n  return async dispatch => {\n    const id = uuid()\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: {\n        id,\n        message: msg,\n        color: 'info',\n        icon: 'info_outline'\n      }\n    })\n\n    setTimeout(() => {\n      dispatch(removeNotif(id))\n    }, timeout)\n  }\n}\n\nexport const setSuccess = (msg, timeout = DEFAULT_TIME) => {\n  return async dispatch => {\n    const id = uuid()\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: {\n        id,\n        message: msg,\n        color: 'success',\n        icon: Check\n      }\n    })\n\n    setTimeout(() => {\n      dispatch(removeNotif(id))\n    }, timeout)\n  }\n}\n\nexport const setError = (msg, timeout = DEFAULT_TIME) => {\n  return async dispatch => {\n    const id = uuid()\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: {\n        id,\n        message: msg,\n        color: 'danger',\n        icon: Warning\n      }\n    })\n\n    setTimeout(() => {\n      dispatch(removeNotif(id))\n    }, timeout)\n  }\n}\n\nconst removeNotif = id => {\n  return async dispatch => {\n    dispatch({\n      type: 'REMOVE_NOTIFICATION',\n      data: id\n    })\n  }\n}\n\nexport default notificationReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport userReducer from './reducers/userReducer'\nimport languageReducer from './reducers/languageReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport themeReducer from './reducers/themeReducer'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  language: languageReducer,\n  notification: notificationReducer,\n  theme: themeReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\n// Own components\nimport App from './App'\nimport CustomLoader from './components/CustomLoader/CustomLoader'\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\n\n// Translations\nimport './i18n'\n\n// Redux store\nimport store from './store'\n\n// CSS for whole app\nimport './index.css'\n\nconst Index = () => {\n  return (\n    <React.StrictMode>\n      <BrowserRouter>\n        <Provider store={store}>\n          <ErrorBoundary>\n            <Suspense fallback={<CustomLoader />} >\n              <App />\n            </Suspense>\n          </ErrorBoundary>\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>\n  )\n}\n\nReactDOM.render(\n  <Index />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { setToLS, getFromLS } from '../utils/localStorage'\nimport { defaultTheme } from '../utils/themeUtil'\n\nconst themeReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_THEME':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initTheme = () => {\n  return async dispatch => {\n\n    // Get or set and provide initial theme\n    let selectedTheme = getFromLS('selectedTheme')\n    if (!selectedTheme) {\n      selectedTheme = defaultTheme\n\n      // Update to local storage\n      setToLS('selectedTheme', selectedTheme)\n    }\n\n    // Update to store\n    dispatch({\n      type: 'SET_THEME',\n      data: selectedTheme\n    })\n  }\n}\n\nexport const setTheme = (theme) => {\n  return async dispatch => {\n\n    // Update to local storage\n    setToLS('selectedTheme', theme)\n\n    // Update to store\n    dispatch({\n      type: 'SET_THEME',\n      data: theme\n    })\n  }\n}\n\nexport default themeReducer","import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles'\n\nimport dark from '../assets/themes/dark.json'\nimport light from '../assets/themes/light.json'\n\nexport const availableThemes = [\n  dark,\n  light\n]\n\nexport const defaultTheme = dark\n\nconst provideMuiTheme = theme => {\n  return createMuiTheme(theme)\n}\n\nexport const getThemeByName = name => {\n  for(let i = 0; i < availableThemes.length; ++i) {\n    if (availableThemes[i].name === name) {\n      return availableThemes[i]\n    }\n  }\n\n  return null\n}\n\nexport default provideMuiTheme","import { setToLS, getFromLS } from '../utils/localStorage'\nimport defaultLanguage from '../utils/languageUtil'\n\nconst languageReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_LANGUAGE':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initLanguage = () => {\n  return async dispatch => {\n\n    // Get or set and provide initial language\n    let selectedLang = getFromLS('selectedLanguage')\n    if (!selectedLang) {\n      selectedLang = defaultLanguage\n\n      // Update to local storage\n      setToLS('selectedLanguage', selectedLang)\n    }\n\n    // Update to store\n    dispatch({\n      type: 'SET_LANGUAGE',\n      data: selectedLang\n    })\n  }\n}\n\nexport const setLanguage = lang => {\n  return async dispatch => {\n\n    // Set to local storage\n    setToLS('selectedLanguage', lang)\n\n    // Set to store\n    dispatch({\n      type: 'SET_LANGUAGE',\n      data: lang\n    })\n  }\n}\n\nexport default languageReducer","// TODO: translations for language names?\n\nconst defaultLanguage = {\n  short: 'en',\n  name: 'English'\n}\n\nexport const languages = [\n  {\n    short: 'en',\n    name: 'English'\n  },\n  {\n    short: 'fi',\n    name: 'Suomi'\n  }\n]\n\nexport const getByName = name => {\n  return languages.filter(l => l.name === name)[0]\n}\n\nexport default defaultLanguage","import React from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport PropTypes from 'prop-types'\n\nimport { SolarSystemLoading } from 'react-loadingg'\n\nimport styles from './CustomLoader.module.css'\n\nconst CustomLoader = ({ size }) => {\n  const theme = useTheme()\n\n  return (\n    <div className={styles.container}>\n      <SolarSystemLoading\n        size={size}\n        color={theme.palette.primary.main}\n      />\n    </div>\n  )\n}\n\nCustomLoader.propTypes = {\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n}\n\nCustomLoader.defaultProps = {\n  size: 'default',\n}\n\nexport default CustomLoader","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((/*theme*/) => ({\n  root: {\n    flexGrow: 1,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  }\n}))\n\nconst GridContainer = ({ direction, horizontal, vertical, children }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction={direction}\n        justify={horizontal}\n        alignItems={vertical}\n        className={classes.grid}\n      >\n\n        {children}\n\n      </Grid>\n    </div>\n  )\n}\n\nGridContainer.propTypes = {\n\n  /** Components inside */\n  children: PropTypes.node,\n\n  /** Direction of the grids inside */\n  direction: PropTypes.oneOf(['row', 'column']),\n\n  /** Horizontal alignment of the grids inside */\n  horizontal: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /** Vertical alignment of the grids inside */\n  vertical: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch'])\n}\n\nGridContainer.defaultProps = {\n  direction: 'row',\n  horizontal: 'center',\n  vertical: 'center'\n}\n\nexport default GridContainer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CustomLoader_container__3cfzx\"};"],"sourceRoot":""}